---
apiVersion: v1
kind: Namespace
metadata:
    name: devops
    
---
#### Creating the volume for data persistence
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jenkins-home
  namespace: devops
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 2Gi
  hostPath:
    path: /data/jenkins-home/
    
---
##### Creating the volume claim
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
    name: jenkins-data
    namespace: devops
spec:
    accessModes:
    - ReadWriteOnce
    resources:
        requests:
            storage: 2Gi

---
##### Creating the service account
apiVersion: v1
kind: ServiceAccount
metadata:
    name: jenkins-robot
    namespace: devops

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
    name: jenkins-admin
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: jenkins-robot
    namespace: devops
    
---
##### Creating the deployment
kind: Deployment
apiVersion: apps/v1
metadata:
  name: jenkins
  namespace: devops
spec:
  replicas: 1
  selector:
    matchLabels:
      app: master
  template:
    metadata:
      labels:
        app: master
        tooltype: jenkins
    spec:
      containers:
        - name: jenkins
          image: dougliu/jenkins3:latest
          resources:
            limits:
              cpu: 1500m
              memory: 2000Mi
            requests:
              cpu: 1000m
              memory: 1000Mi
          ports:
            - name: http-port
              containerPort: 8080
            - name: jnlp-port
              containerPort: 50000
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
            - mountPath: /var/run 
              name: docker-sock 
      volumes:
        - name: jenkins-home
          persistentVolumeClaim:
            claimName: jenkins-data
        - name: docker-sock 
          hostPath: 
            path: /var/run 
---
kind: Service
apiVersion: v1
metadata:
  name: jenkins-ui
  namespace: devops
  labels:
    tooltype: jenkins
spec:
  type: LoadBalancer
  selector:
    app: master
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      name: ui

---
kind: Service
apiVersion: v1
metadata:
  name: jenkins-discovery
  namespace: devops
spec:
  selector:
    app: master
  ports:
    - protocol: TCP
      port: 50000
      targetPort: 50000
      name: slaves